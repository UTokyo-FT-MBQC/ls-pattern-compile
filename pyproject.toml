[build-system]
requires = ["setuptools>=66", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lspattern"
version = "0.0.1"
description = "MBQC lattice-surgery compiler experiments (RHG blocks/pipes)"
readme = "README.md"
requires-python = ">=3.10"
authors = [
  { name = "Internal", email = "devnull@example.com" }
]
dynamic = ["dependencies", "optional-dependencies"]

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = ["requirements-dev.txt"] }

[tool.setuptools.package-dir]
lspattern = "lspattern"

[tool.ruff]
target-version = "py313"
line-length = 120

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = [
  # Conflicts with ruff format
  "COM812",
  "COM819",
  "D206",
  "D300",
  "E111",
  "E114",
  "E117",
  "ISC001",
  "ISC002",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "W191",

  # Not necessary for this project
  "AIR",
  "ASYNC",
  "DJ",
  "PD",

  # Manually disabled
  "CPY",     # copyright missing
  "D100",    # missing docstring in public module
  "D105",    # undocumented magic method
  "D205",    # blank line required between summary line and description
  "DOC201",  # return is not documented in docstring
  "ERA",     # commented-out code
  "FBT",     # boolean-trap
  "FIX",     # fixme
  "PLR0904", # too-many-public-methods
  "T201",    # print found
]

[tool.ruff.lint.pylint]
allow-dunder-method-names = [
  "__array__",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
  "S101",    # `assert` detected
  "SLF001",  # private method
  "PLC2701", # private method
  "PLR2004", # magic value in test(should be removed)
  "D100",
  "D103",
  "D104",
  "D400",
]
"examples/*.py" = [
  "T201", # print
  "D",
]

[tool.pytest.ini_options]
pythonpath = ["lspattern"]
testpaths = ["tests"]
filterwarnings = "ignore::DeprecationWarning"
markers = "slow: mark test as slow"

[tool.mypy]
strict = true
ignore_missing_imports = true
files = ["lspattern", "tests", "examples"]

[tool.pyright]
include = ["lspattern", "tests", "examples"]
reportUnknownArgumentType = "information"
reportUnknownLambdaType = "information"
reportUnknownMemberType = "information"
reportUnknownParameterType = "information"
reportUnknownVariableType = "information"
