[build-system]
requires = ["setuptools>=66", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lspattern"
version = "0.0.4"
description = "MBQC lattice-surgery compiler experiments (RHG blocks/pipes)"
readme = "README.md"
requires-python = ">=3.10, <3.14"
license = {text = "Apache-2.0"}
authors = [
  { name = "Masato Fukushima", email = "masa1063fuk@gmail.com" },
  { name = "Shinichi Inoue"},
  { name = "Daichi Sasaki"},
]
keywords = [
    "quantum computing",
    "MBQC",
    "measurement-based quantum computing",
    "FTQC",
    "fault-tolerant quantum computing",
    "lattice surgery",
    "quantum compilation",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Quantum Computing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic = ["dependencies", "optional-dependencies"]

[project.urls]
Homepage = "https://github.com/UTokyo-FT-MBQC/ls-pattern-compile"
Repository = "https://github.com/UTokyo-FT-MBQC/ls-pattern-compile"
Issues = "https://github.com/UTokyo-FT-MBQC/ls-pattern-compile/issues"
Changelog = "https://github.com/UTokyo-FT-MBQC/ls-pattern-compile/blob/main/CHANGELOG.md"

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = ["requirements-dev.txt"] }

[tool.setuptools.package-dir]
lspattern = "lspattern"

[tool.ruff]
target-version = "py313"
line-length = 120
extend-exclude = [
  "examples/**",
]

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = [
  # Conflicts with ruff format
  "COM812",
  "COM819",
  "D206",
  "D300",
  "E111",
  "E114",
  "E117",
  "ISC001",
  "ISC002",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "W191",

  # Not necessary for this project
  "AIR",
  "ASYNC",
  "DJ",
  "PD",

  # Manually disabled
  "CPY",     # copyright missing
  "D105",    # undocumented magic method
  "ERA",     # commented-out code
  "FBT",     # boolean-trap
  "FIX",     # fixme
  "PLR0904", # too-many-public-methods
  "D",       # docstring
  "DOC",     # document
  "PLR09",   # too-many-*
  "T201",    # print
  "TD",      # TODO
]

[tool.ruff.lint.pylint]
allow-dunder-method-names = [
  "__array__",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
  "S101",    # `assert` detected
  "SLF001",  # private method
  "PLC2701", # private method
  "PLR2004", # magic value in test(should be removed)
  "D100",
  "D103",
  "D104",
  "D400",
  "PLR6301"
]
"examples/*.py" = [
  "T201", # print
  "D",
]

[tool.pytest.ini_options]
pythonpath = ["lspattern"]
testpaths = ["tests"]
filterwarnings = "ignore::DeprecationWarning"
markers = "slow: mark test as slow"

[tool.mypy]
strict = true
ignore_missing_imports = true
files = ["lspattern", "tests"]

[tool.pyright]
include = ["lspattern", "tests"]
reportMissingImports = false
